name: Build Using Ubuntu-installed libraries

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
  workflow_dispatch:

concurrency:  
  group: ${{ github.workflow}}-${{ github.head_ref }}  
  cancel-in-progress: true

permissions:
  contents: read

jobs:

  build-deps:

    runs-on: ubuntu-22.04

    strategy:
      matrix:
        compiler: [ gnu, clang ]
    steps:

      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install System dependencies
        shell: bash -l {0}
        run: sudo apt update && sudo apt install -y libaec-dev zlib1g-dev automake autoconf libcurl4-openssl-dev libjpeg-dev wget curl bzip2 m4 flex bison cmake libzip-dev openmpi-bin libopenmpi-dev libnetcdf-dev libhdf5-dev libcgns-dev libmatio-dev libx11-dev

      - name: Install Using linuxbrew
        shell: bash -l {0}
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew install fmt catch2

      - name: Run cmake
        shell: bash -l {0}
        run: |
          echo $HOME
          find /usr/include -name cgnslib.h
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          mkdir build
          cd build
          NETCDF_PATH=/usr MODERN=YES NUMPROCS=2 COMPILER=${{ matrix.compiler }} INSTALL_PATH=${HOME} bash ../cmake-config

      - name: Build
        shell: bash -l {0}
        run: |
          cd build
          make -j 4
        if: ${{ success() }}

      - name: Install
        shell: bash -l {0}
        run: |
          cd build
          make -j 4 install
        if: ${{ success() }}

      - name: Run Tests
        shell: bash -l {0}
        run: |
          cd build
          ctest -j 4 --output-on-failure
        if: ${{ success() }}
